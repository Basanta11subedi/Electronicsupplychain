{"ast":null,"code":"// src/contract.js\n\nimport { ethers } from \"ethers\";\nimport contractABI from \"./contractABI.json\"; // Paste your ABI here or import it\n\nconst contractAddress = \"0x262BA7b35C0863Db8f0ceFcB7d02592642906e20\"; // Replace with your contract's address\n\n// Function to initialize and connect to the smart contract\nexport const getContract = () => {\n  if (typeof window.ethereum !== \"undefined\") {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    return new ethers.Contract(contractAddress, contractABI, signer);\n  } else {\n    console.error(\"MetaMask is not installed!\");\n    return null;\n  }\n};","map":{"version":3,"names":["ethers","contractABI","contractAddress","getContract","window","ethereum","provider","providers","Web3Provider","signer","getSigner","Contract","console","error"],"sources":["/home/basanta/supply-chain-frontend/src/contract.js"],"sourcesContent":["// src/contract.js\n\nimport { ethers } from \"ethers\";\nimport contractABI from \"./contractABI.json\"; // Paste your ABI here or import it\n\nconst contractAddress = \"0x262BA7b35C0863Db8f0ceFcB7d02592642906e20\"; // Replace with your contract's address\n\n// Function to initialize and connect to the smart contract\nexport const getContract = () => {\n    if (typeof window.ethereum !== \"undefined\") {\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        return new ethers.Contract(contractAddress, contractABI, signer);\n    } else {\n        console.error(\"MetaMask is not installed!\");\n        return null;\n    }\n};\n"],"mappings":"AAAA;;AAEA,SAASA,MAAM,QAAQ,QAAQ;AAC/B,OAAOC,WAAW,MAAM,oBAAoB,CAAC,CAAC;;AAE9C,MAAMC,eAAe,GAAG,4CAA4C,CAAC,CAAC;;AAEtE;AACA,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAC7B,IAAI,OAAOC,MAAM,CAACC,QAAQ,KAAK,WAAW,EAAE;IACxC,MAAMC,QAAQ,GAAG,IAAIN,MAAM,CAACO,SAAS,CAACC,YAAY,CAACJ,MAAM,CAACC,QAAQ,CAAC;IACnE,MAAMI,MAAM,GAAGH,QAAQ,CAACI,SAAS,CAAC,CAAC;IACnC,OAAO,IAAIV,MAAM,CAACW,QAAQ,CAACT,eAAe,EAAED,WAAW,EAAEQ,MAAM,CAAC;EACpE,CAAC,MAAM;IACHG,OAAO,CAACC,KAAK,CAAC,4BAA4B,CAAC;IAC3C,OAAO,IAAI;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}