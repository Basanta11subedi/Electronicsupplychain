{"ast":null,"code":"import { ethers } from \"ethers\"; // Import ethers at the top\n\nimport contractABI from \"./contractABI.json\";\nconst contractAddress = \"0x262BA7b35C0863Db8f0ceFcB7d02592642906e20\";\n\n// Create a provider\nconst provider = new ethers.BrowserProvider(window.ethereum); // Using BrowserProvider for a web environment\n\n// Get the signer from the provider\nconst getSigner = async () => {\n  if (!window.ethereum) {\n    console.error(\"Ethereum provider not found\");\n    return null;\n  }\n  await window.ethereum.request({\n    method: 'eth_requestAccounts'\n  }); // Request account access\n  return provider.getSigner(); // Get the signer\n};\n\n// Create a contract instance\nconst getContract = async () => {\n  const signer = await getSigner();\n  if (!signer) return null; // Ensure we have a signer\n  return new ethers.Contract(contractAddress, contractABI, signer);\n};\n\n// Export the contract instance function\nexport { getContract };","map":{"version":3,"names":["ethers","contractABI","contractAddress","provider","BrowserProvider","window","ethereum","getSigner","console","error","request","method","getContract","signer","Contract"],"sources":["/home/basanta/supply-chain-frontend/src/contract.js"],"sourcesContent":["\n\nimport { ethers } from \"ethers\"; // Import ethers at the top\n\n\nimport contractABI from \"./contractABI.json\";\n\nconst contractAddress = \"0x262BA7b35C0863Db8f0ceFcB7d02592642906e20\"; \n\n// Create a provider\nconst provider = new ethers.BrowserProvider(window.ethereum); // Using BrowserProvider for a web environment\n\n// Get the signer from the provider\nconst getSigner = async () => {\n    if (!window.ethereum) {\n        console.error(\"Ethereum provider not found\");\n        return null;\n    }\n    await window.ethereum.request({ method: 'eth_requestAccounts' }); // Request account access\n    return provider.getSigner(); // Get the signer\n};\n\n// Create a contract instance\nconst getContract = async () => {\n    const signer = await getSigner();\n    if (!signer) return null; // Ensure we have a signer\n    return new ethers.Contract(contractAddress, contractABI, signer);\n};\n\n// Export the contract instance function\nexport { getContract };\n"],"mappings":"AAEA,SAASA,MAAM,QAAQ,QAAQ,CAAC,CAAC;;AAGjC,OAAOC,WAAW,MAAM,oBAAoB;AAE5C,MAAMC,eAAe,GAAG,4CAA4C;;AAEpE;AACA,MAAMC,QAAQ,GAAG,IAAIH,MAAM,CAACI,eAAe,CAACC,MAAM,CAACC,QAAQ,CAAC,CAAC,CAAC;;AAE9D;AACA,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;EAC1B,IAAI,CAACF,MAAM,CAACC,QAAQ,EAAE;IAClBE,OAAO,CAACC,KAAK,CAAC,6BAA6B,CAAC;IAC5C,OAAO,IAAI;EACf;EACA,MAAMJ,MAAM,CAACC,QAAQ,CAACI,OAAO,CAAC;IAAEC,MAAM,EAAE;EAAsB,CAAC,CAAC,CAAC,CAAC;EAClE,OAAOR,QAAQ,CAACI,SAAS,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC;;AAED;AACA,MAAMK,WAAW,GAAG,MAAAA,CAAA,KAAY;EAC5B,MAAMC,MAAM,GAAG,MAAMN,SAAS,CAAC,CAAC;EAChC,IAAI,CAACM,MAAM,EAAE,OAAO,IAAI,CAAC,CAAC;EAC1B,OAAO,IAAIb,MAAM,CAACc,QAAQ,CAACZ,eAAe,EAAED,WAAW,EAAEY,MAAM,CAAC;AACpE,CAAC;;AAED;AACA,SAASD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}